#!/bin/bash

JDK_HOME="$(java-config --jdk-home)"

usage() {
	prog=$(basename "${0}")
	echo "Usage:"
	echo "${prog} <old ebuild> <new ebuild> <depends>"
	echo "depends: in the format given to java-config"
	echo ""
	echo "For example:"
	echo "apicheck xerces-2.6.2-r2.ebuild xerces-2.7.1.ebuild xml-commons-external-1.3,xml-commons-resolver"
	exit 1
}

if [[ $# -lt 2 ]]; then
	usage
fi

oldebuild="${1}"
newebuild="${2}"

depends="${3}"

if ! [[ -e "${oldebuild}" && -e "${newebuild}" ]]; then
	usage
fi	

TMP_DIR="$(mktemp -d /tmp/$(basename ${0})-XXXXXX || exit 1)"
old="${TMP_DIR}/old.japi.gz"
new="${TMP_DIR}/new.japi.gz"
touch $old

end() {
	rm -v ${TMP_DIR}/*.japi.gz
	rmdir -v ${TMP_DIR}
	exit ${1}
}

getjars() {
	find "${portagetmp}/$(sed -e "s/\.ebuild$//" <<< ${1})/image" -name '*.jar' || end 1
}

generate_japi() {
	japize as ${1} packages "${JDK_HOME}/jre/lib/rt.jar" ${2} ${dependjars} ${3} || end 1
}

listpackages() {
	$(java-config --java) -cp "$(dirname "${0}")" PackageLister "${@}" || end 1
}

portagetmp="$(portageq envvar PORTAGE_TMPDIR || end 1)/portage"

ebuild "${oldebuild}" install || end 1
oldjars="$(getjars ${oldebuild})"
#echo $oldjars
tocheck="$(listpackages ${oldjars})" 

#echo $tocheck
generate_japi ${old} "${oldjars}" "${tocheck}"

ebuild "${newebuild}" install || end 1
newjars="$(getjars ${newebuild})"
generate_japi ${new} "${newjars}" "${tocheck}"

japicompat ${old} ${new}

end 0
